'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var WebSocket = _interopDefault(require('ws'));

const peers = new Set();
const state = {};
const server = new WebSocket.Server({
    port: 8081,
});
server.on('connection', (ws, request) => {
    peers.add(ws);
    ws.send(JSON.stringify({
        op: 'state',
        arg: state,
    }));
    ws.on('message', (data) => {
        let msg = JSON.parse(data.toString());
        if (msg.op == 'state') {
            Object.assign(state, msg.arg);
            for (let peer of peers) {
                if (peer != ws) {
                    peer.send(data);
                }
            }
        }
    });
    ws.on('close', (code, reason) => {
        peers.delete(ws);
    });
});
server.on('listening', () => {
    let value = server.address();
    let x;
    if (typeof value == 'string')
        x = value;
    else
        x = `${value.address} port ${value.port}`;
    console.log(`listening on ${x}`);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXMiOlsiLi4vc3JjL21haW4udHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFdlYlNvY2tldCBmcm9tICd3cyc7XG5cbmNvbnN0IHBlZXJzID0gbmV3IFNldDxXZWJTb2NrZXQ+KCk7XG5jb25zdCBzdGF0ZSA9IHt9O1xuY29uc3Qgc2VydmVyID0gbmV3IFdlYlNvY2tldC5TZXJ2ZXIoe1xuICAgIHBvcnQ6IDgwODEsXG59KTtcblxuc2VydmVyLm9uKCdjb25uZWN0aW9uJywgKHdzLCByZXF1ZXN0KSA9PiB7XG4gICAgcGVlcnMuYWRkKHdzKTtcblxuICAgIHdzLnNlbmQoSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBvcDogJ3N0YXRlJyxcbiAgICAgICAgYXJnOiBzdGF0ZSxcbiAgICB9KSk7XG5cbiAgICB3cy5vbignbWVzc2FnZScsIChkYXRhKSA9PiB7XG4gICAgICAgIGxldCBtc2cgPSBKU09OLnBhcnNlKGRhdGEudG9TdHJpbmcoKSk7XG5cbiAgICAgICAgaWYgKG1zZy5vcCA9PSAnc3RhdGUnKSB7XG4gICAgICAgICAgICBPYmplY3QuYXNzaWduKHN0YXRlLCBtc2cuYXJnKTtcblxuICAgICAgICAgICAgZm9yIChsZXQgcGVlciBvZiBwZWVycykge1xuICAgICAgICAgICAgICAgIGlmIChwZWVyICE9IHdzKSB7XG4gICAgICAgICAgICAgICAgICAgIHBlZXIuc2VuZChkYXRhKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIHdzLm9uKCdjbG9zZScsIChjb2RlLCByZWFzb24pID0+IHtcbiAgICAgICAgcGVlcnMuZGVsZXRlKHdzKTtcbiAgICB9KTtcbn0pO1xuXG5zZXJ2ZXIub24oJ2xpc3RlbmluZycsICgpID0+IHtcbiAgICBsZXQgdmFsdWUgPSBzZXJ2ZXIuYWRkcmVzcygpO1xuICAgIGxldCB4O1xuICAgIGlmICh0eXBlb2YgdmFsdWUgPT0gJ3N0cmluZycpXG4gICAgICAgIHggPSB2YWx1ZTtcbiAgICBlbHNlXG4gICAgICAgIHggPSBgJHt2YWx1ZS5hZGRyZXNzfSBwb3J0ICR7dmFsdWUucG9ydH1gO1xuICAgIGNvbnNvbGUubG9nKGBsaXN0ZW5pbmcgb24gJHt4fWApO1xufSk7XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRUEsTUFBTSxLQUFLLEdBQUcsSUFBSSxHQUFHLEVBQWEsQ0FBQztBQUNuQyxNQUFNLEtBQUssR0FBRyxFQUFFLENBQUM7QUFDakIsTUFBTSxNQUFNLEdBQUcsSUFBSSxTQUFTLENBQUMsTUFBTSxDQUFDO0lBQ2hDLElBQUksRUFBRSxJQUFJO0NBQ2IsQ0FBQyxDQUFDO0FBRUgsTUFBTSxDQUFDLEVBQUUsQ0FBQyxZQUFZLEVBQUUsQ0FBQyxFQUFFLEVBQUUsT0FBTztJQUNoQyxLQUFLLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBRWQsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDO1FBQ25CLEVBQUUsRUFBRSxPQUFPO1FBQ1gsR0FBRyxFQUFFLEtBQUs7S0FDYixDQUFDLENBQUMsQ0FBQztJQUVKLEVBQUUsQ0FBQyxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUMsSUFBSTtRQUNsQixJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDO1FBRXRDLElBQUksR0FBRyxDQUFDLEVBQUUsSUFBSSxPQUFPLEVBQUU7WUFDbkIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBRTlCLEtBQUssSUFBSSxJQUFJLElBQUksS0FBSyxFQUFFO2dCQUNwQixJQUFJLElBQUksSUFBSSxFQUFFLEVBQUU7b0JBQ1osSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztpQkFDbkI7YUFDSjtTQUNKO0tBQ0osQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxJQUFJLEVBQUUsTUFBTTtRQUN4QixLQUFLLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0tBQ3BCLENBQUMsQ0FBQztDQUNOLENBQUMsQ0FBQztBQUVILE1BQU0sQ0FBQyxFQUFFLENBQUMsV0FBVyxFQUFFO0lBQ25CLElBQUksS0FBSyxHQUFHLE1BQU0sQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUM3QixJQUFJLENBQUMsQ0FBQztJQUNOLElBQUksT0FBTyxLQUFLLElBQUksUUFBUTtRQUN4QixDQUFDLEdBQUcsS0FBSyxDQUFDOztRQUVWLENBQUMsR0FBRyxHQUFHLEtBQUssQ0FBQyxPQUFPLFNBQVMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQzlDLE9BQU8sQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxDQUFDLENBQUM7Q0FDcEMsQ0FBQyxDQUFDIn0=
